{"ast":null,"code":"var _jsxFileName = \"/Users/ihaein/teamSsery/SugarFree/Front/sugarfree/src/pages/GiveCandyPage/CustomPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport popupStyles from \"./custom-popup.module.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomPopup = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const closeHandler = e => {\n    setShow(false);\n    props.onClose(false);\n  };\n\n  useEffect(() => {\n    setShow(props.show);\n  }, [props.show]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: show ? \"visible\" : \"hidden\",\n      opacity: show ? \"1\" : \"0\"\n    },\n    className: popupStyles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: popupStyles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: popupStyles.close,\n        onClick: closeHandler,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: popupStyles.content,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomPopup, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n\n_c = CustomPopup;\nCustomPopup.propTypes = {\n  title: PropTypes.string.isRequired,\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default CustomPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPopup\");","map":{"version":3,"sources":["/Users/ihaein/teamSsery/SugarFree/Front/sugarfree/src/pages/GiveCandyPage/CustomPopup.jsx"],"names":["useEffect","useState","popupStyles","PropTypes","CustomPopup","props","show","setShow","closeHandler","e","onClose","visibility","opacity","overlay","popup","title","close","content","children","propTypes","string","isRequired","bool","func"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,IAAAA,KAAK,CAACK,OAAN,CAAc,KAAd;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,IAAP,CAFM,CAAT;AAIA,sBACE;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,UAAU,EAAEL,IAAI,GAAG,SAAH,GAAe,QAD1B;AAELM,MAAAA,OAAO,EAAEN,IAAI,GAAG,GAAH,GAAS;AAFjB,KADT;AAKE,IAAA,SAAS,EAAEJ,WAAW,CAACW,OALzB;AAAA,2BAOE;AAAK,MAAA,SAAS,EAAEX,WAAW,CAACY,KAA5B;AAAA,8BACE;AAAA,kBAAKT,KAAK,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAEb,WAAW,CAACc,KAA7B;AAAoC,QAAA,OAAO,EAAER,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAEN,WAAW,CAACe,OAA5B;AAAA,kBAAsCZ,KAAK,CAACa;AAA5C;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7BD;;GAAMd,W;;KAAAA,W;AA+BNA,WAAW,CAACe,SAAZ,GAAwB;AACtBJ,EAAAA,KAAK,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC,UADF;AAEtBf,EAAAA,IAAI,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAFC;AAGtBX,EAAAA,OAAO,EAAEP,SAAS,CAACoB,IAAV,CAAeF;AAHF,CAAxB;AAKA,eAAejB,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport popupStyles from \"./custom-popup.module.css\";\nimport PropTypes from \"prop-types\";\nconst CustomPopup = (props) => {\n  const [show, setShow] = useState(false);\n\n  const closeHandler = (e) => {\n    setShow(false);\n    props.onClose(false);\n  };\n\n  useEffect(() => {\n    setShow(props.show);\n  }, [props.show]);\n\n  return (\n    <div\n      style={{\n        visibility: show ? \"visible\" : \"hidden\",\n        opacity: show ? \"1\" : \"0\"\n      }}\n      className={popupStyles.overlay}\n    >\n      <div className={popupStyles.popup}>\n        <h2>{props.title}</h2>\n        <span className={popupStyles.close} onClick={closeHandler}>\n          &times;\n        </span>\n        <div className={popupStyles.content}>{props.children}</div>\n      </div>\n    </div>\n  );\n};\n\nCustomPopup.propTypes = {\n  title: PropTypes.string.isRequired,\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default CustomPopup;"]},"metadata":{},"sourceType":"module"}